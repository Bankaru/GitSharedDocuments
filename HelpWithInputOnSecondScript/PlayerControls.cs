//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Quarterback"",
            ""id"": ""fe8b84fa-bb5a-448f-aa5d-b50f62385130"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""9a1f16f4-df1a-4d21-9c99-88ae4367bca6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""d9b60915-d1d3-4c3e-a967-10be4229de7d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Value"",
                    ""id"": ""22a5548f-bf9f-4c48-874b-fd0c584d08d8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Throw"",
                    ""type"": ""Button"",
                    ""id"": ""6ca130cb-016c-4c5a-a3f1-fa4d16063e09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelThrow/Pumpfake"",
                    ""type"": ""Button"",
                    ""id"": ""e2c1e743-d0a6-4bdf-928c-541d29781eef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleStance"",
                    ""type"": ""Button"",
                    ""id"": ""e983c044-3951-43ae-928f-70fd3894c53d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""f494fafc-1d9c-44d7-8af5-90000dce08e4"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8cd01148-f128-42f9-b44e-f766503bd6a1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""41e08c23-662e-43b9-8db5-cf1b195368c1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6add9a5d-5273-49a9-9084-992fe62fbd44"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""91bece6e-9095-44b6-ac84-50ad485452ea"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7c5471ef-9e08-4c43-a748-ae29fbcb35f4"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29d8b58f-c4ec-4f1f-a3f2-cc1d5357ae65"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac836869-1ff8-4351-a551-856dde374eb3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8b8ca4f-72b9-41b8-91c6-17e4de9cdaa8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelThrow/Pumpfake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""e535d388-3aa8-4526-aab6-774ad60547eb"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelThrow/Pumpfake"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""4da6602b-6e4e-416b-87db-6d659ec07f2f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelThrow/Pumpfake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""887964c0-d1af-47ef-a106-005b593bab2c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelThrow/Pumpfake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""459dd3ee-3afe-470a-be6f-3d7e6c7f6fd7"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleStance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Quarterback
        m_Quarterback = asset.FindActionMap("Quarterback", throwIfNotFound: true);
        m_Quarterback_Move = m_Quarterback.FindAction("Move", throwIfNotFound: true);
        m_Quarterback_Run = m_Quarterback.FindAction("Run", throwIfNotFound: true);
        m_Quarterback_Aim = m_Quarterback.FindAction("Aim", throwIfNotFound: true);
        m_Quarterback_Throw = m_Quarterback.FindAction("Throw", throwIfNotFound: true);
        m_Quarterback_CancelThrowPumpfake = m_Quarterback.FindAction("CancelThrow/Pumpfake", throwIfNotFound: true);
        m_Quarterback_ToggleStance = m_Quarterback.FindAction("ToggleStance", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Quarterback
    private readonly InputActionMap m_Quarterback;
    private List<IQuarterbackActions> m_QuarterbackActionsCallbackInterfaces = new List<IQuarterbackActions>();
    private readonly InputAction m_Quarterback_Move;
    private readonly InputAction m_Quarterback_Run;
    private readonly InputAction m_Quarterback_Aim;
    private readonly InputAction m_Quarterback_Throw;
    private readonly InputAction m_Quarterback_CancelThrowPumpfake;
    private readonly InputAction m_Quarterback_ToggleStance;
    public struct QuarterbackActions
    {
        private @PlayerControls m_Wrapper;
        public QuarterbackActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Quarterback_Move;
        public InputAction @Run => m_Wrapper.m_Quarterback_Run;
        public InputAction @Aim => m_Wrapper.m_Quarterback_Aim;
        public InputAction @Throw => m_Wrapper.m_Quarterback_Throw;
        public InputAction @CancelThrowPumpfake => m_Wrapper.m_Quarterback_CancelThrowPumpfake;
        public InputAction @ToggleStance => m_Wrapper.m_Quarterback_ToggleStance;
        public InputActionMap Get() { return m_Wrapper.m_Quarterback; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(QuarterbackActions set) { return set.Get(); }
        public void AddCallbacks(IQuarterbackActions instance)
        {
            if (instance == null || m_Wrapper.m_QuarterbackActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_QuarterbackActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @Throw.started += instance.OnThrow;
            @Throw.performed += instance.OnThrow;
            @Throw.canceled += instance.OnThrow;
            @CancelThrowPumpfake.started += instance.OnCancelThrowPumpfake;
            @CancelThrowPumpfake.performed += instance.OnCancelThrowPumpfake;
            @CancelThrowPumpfake.canceled += instance.OnCancelThrowPumpfake;
            @ToggleStance.started += instance.OnToggleStance;
            @ToggleStance.performed += instance.OnToggleStance;
            @ToggleStance.canceled += instance.OnToggleStance;
        }

        private void UnregisterCallbacks(IQuarterbackActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @Throw.started -= instance.OnThrow;
            @Throw.performed -= instance.OnThrow;
            @Throw.canceled -= instance.OnThrow;
            @CancelThrowPumpfake.started -= instance.OnCancelThrowPumpfake;
            @CancelThrowPumpfake.performed -= instance.OnCancelThrowPumpfake;
            @CancelThrowPumpfake.canceled -= instance.OnCancelThrowPumpfake;
            @ToggleStance.started -= instance.OnToggleStance;
            @ToggleStance.performed -= instance.OnToggleStance;
            @ToggleStance.canceled -= instance.OnToggleStance;
        }

        public void RemoveCallbacks(IQuarterbackActions instance)
        {
            if (m_Wrapper.m_QuarterbackActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IQuarterbackActions instance)
        {
            foreach (var item in m_Wrapper.m_QuarterbackActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_QuarterbackActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public QuarterbackActions @Quarterback => new QuarterbackActions(this);
    public interface IQuarterbackActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnThrow(InputAction.CallbackContext context);
        void OnCancelThrowPumpfake(InputAction.CallbackContext context);
        void OnToggleStance(InputAction.CallbackContext context);
    }
}
